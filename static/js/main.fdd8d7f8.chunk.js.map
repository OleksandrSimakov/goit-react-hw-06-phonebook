{"version":3,"sources":["Components/ContactAddForm/ContactAddForm.styled.jsx","Components/ContactAddForm/ContactAddForm.jsx","Components/ContactListItem/ContactListItem.styled.jsx","Components/ContactListItem/ContactListItem.jsx","Components/ContactList/ContactList.styled.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.styled.jsx","Components/Filter/Filter.jsx","Components/App.jsx","index.js"],"names":["ContactAddFormEl","styled","form","styles","input","display","marginBottom","marginTop","label","button","width","fontSize","backgroundColor","borderRadius","border","cursor","ContactAddForm","onSubmit","useState","name","setName","number","setNumber","handleChange","e","target","value","preventDefault","style","type","pattern","title","required","onChange","ContactListItemEl","li","marginLeft","ContactListItem","onDelBtnClick","onClick","defaultProps","ContactListEl","ul","ContactList","children","FilterEl","div","Filter","filter","handleFilterChange","App","id","contacts","setContacts","setFilter","find","contact","alert","prevState","uuidv4","filterInput","normilizedFilterState","toLowerCase","includes","getFilteredNames","map","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fdd8d7f8.chunk.js","sourcesContent":["import styled from '@emotion/styled'\n\nconst ContactAddFormEl = styled.form`\n  display: flex;\n  flex-direction: column;\n  border: 2px solid black;\n  width: 400px;\n  padding: 20px;\n  margin-bottom: 20px;\n`\nexport default ContactAddFormEl\n","import { useState } from 'react'\nimport ContactAddFormEl from './ContactAddForm.styled'\nimport PropTypes from 'prop-types'\n\nconst styles = {\n  input: {\n    display: 'block',\n    marginBottom: '10px',\n    marginTop: '5px',\n  },\n  label: {\n    marginBottom: '10px',\n  },\n  button: {\n    width: '100px',\n    fontSize: '12px',\n    backgroundColor: 'white',\n    borderRadius: '5px',\n    border: '1px solid gray',\n    cursor: 'pointer',\n  },\n}\n\nexport default function ContactAddForm({ onSubmit }) {\n  const [name, setName] = useState('')\n  const [number, setNumber] = useState('')\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    onSubmit(name, number)\n    setName('')\n    setNumber('')\n  }\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    switch (name) {\n      case 'name':\n        setName(value)\n        break\n      case 'number':\n        setNumber(value)\n        break\n      default:\n        return\n    }\n  }\n\n  return (\n    <>\n      <ContactAddFormEl onSubmit={handleSubmit}>\n        <label style={styles.label}>\n          Name\n          <input\n            style={styles.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={name}\n            onChange={handleChange}\n          />\n        </label>\n        <label style={styles.label}>\n          Number\n          <input\n            style={styles.input}\n            type=\"tel\"\n            name=\"number\"\n            required\n            value={number}\n            onChange={handleChange}\n          ></input>\n        </label>\n        <button type=\"submit\" style={styles.button}>\n          Add Contact\n        </button>\n      </ContactAddFormEl>\n    </>\n  )\n}\n\nContactAddForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n}\n\n// export default class ContactAddForm extends Component {\n//   static propTypes = {\n//     onSubmit: PropTypes.func.isRequired,\n//   }\n\n//   state = {\n//     name: '',\n//     number: '',\n//   }\n\n// handleSubmit = (e) => {\n//   e.preventDefault()\n//   this.props.onSubmit(this.state)\n//   this.setState({\n//     name: '',\n//     number: '',\n//   })\n// }\n\n// handleChange = (e) => {\n//   const { name, value } = e.target\n//   this.setState({\n//     [name]: value,\n//   })\n// }\n\n//   render() {\n//     const { name, number } = this.state\n//     return (\n// <ContactAddFormEl onSubmit={this.handleSubmit}>\n//   <label style={styles.label}>\n//     Name\n//     <input\n//       style={styles.input}\n//       type=\"text\"\n//       name=\"name\"\n//       pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//       title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n//       required\n//       value={name}\n//       onChange={this.handleChange}\n//     />\n//   </label>\n//   <label style={styles.label}>\n//     Number\n//     <input\n//       style={styles.input}\n//       type=\"tel\"\n//       name=\"number\"\n//       required\n//       value={number}\n//       onChange={this.handleChange}\n//     ></input>\n//   </label>\n//   <button type=\"submit\" style={styles.button}>\n//     Add Contact\n//   </button>\n// </ContactAddFormEl>\n//     )\n//   }\n// }\n","import styled from '@emotion/styled'\n\nconst ContactListItemEl = styled.li`\n  display: flex;\n  justify-content: space-between;\n  padding: 5px;\n`\n\nexport default ContactListItemEl\n","import ContactListItemEl from '../ContactListItem/ContactListItem.styled'\nimport PropTypes from 'prop-types'\n\nconst styles = {\n  button: {\n    width: '50px',\n    fontSize: '12px',\n    backgroundColor: 'white',\n    borderRadius: '5px',\n    border: '1px solid gray',\n    cursor: 'pointer',\n    marginLeft: '30px',\n  },\n}\n\nfunction ContactListItem({ name, number, onDelBtnClick }) {\n  return (\n    <ContactListItemEl>\n      {name}: {number}\n      <button\n        type=\"submit\"\n        name={name}\n        onClick={onDelBtnClick}\n        style={styles.button}\n      >\n        Delete\n      </button>\n    </ContactListItemEl>\n  )\n}\n\nContactListItem.propTypes = {\n  onDelBtnClick: PropTypes.func,\n  name: PropTypes.string,\n  number: PropTypes.string,\n}\n\nContactListItem.defaultProps = {\n  name: null,\n  number: null,\n  onDelBtnClick: () => null,\n}\n\nexport default ContactListItem\n","import styled from '@emotion/styled'\n\nconst ContactListEl = styled.ul`\n  padding: 0;\n  list-style: none;\n  width: 400px;\n  margin: 0px;\n`\n\nexport default ContactListEl\n","import ContactListEl from './ContactList.styled'\nimport PropTypes from 'prop-types'\n\nfunction ContactList({ children }) {\n  return <ContactListEl>{children}</ContactListEl>\n}\n\nContactList.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.element),\n}\n\nexport default ContactList\n","import styled from '@emotion/styled'\n\nconst FilterEl = styled.div`\n  margin-bottom: 20px;\n`\n\nexport default FilterEl\n","import FilterEl from './Filter.styled'\nimport PropTypes from 'prop-types'\n\nconst styles = {\n  input: {\n    display: 'block',\n    marginTop: '5px',\n  },\n}\n\nfunction Filter({ filter, handleFilterChange }) {\n  return (\n    <FilterEl>\n      <label>\n        Find contacts by name\n        <input\n          style={styles.input}\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={handleFilterChange}\n        ></input>\n      </label>\n    </FilterEl>\n  )\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  handleFilterChange: PropTypes.func,\n}\n\nFilter.defaultProps = {\n  filter: null,\n  handleFilterChange: null,\n}\n\nexport default Filter\n","import { useState } from 'react'\nimport ContactAddForm from './ContactAddForm/ContactAddForm'\nimport ContactListItem from './ContactListItem/ContactListItem'\nimport ContactList from './ContactList/ContactList'\nimport Filter from './Filter/Filter'\nimport { v4 as uuidv4 } from 'uuid'\n\nexport default function App() {\n  const [contacts, setContacts] = useState([\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ])\n\n  const [filter, setFilter] = useState('')\n\n  const addContact = (name, number) => {\n    const contactsHaveDuplicate = contacts.find(\n      (contact) => contact.name === name,\n    )\n    contactsHaveDuplicate\n      ? alert(`${name} is already in contacts`)\n      : setContacts((prevState) => [\n          ...prevState,\n          { id: uuidv4(), name: name, number: number },\n        ])\n  }\n\n  const handleFilterChange = ({ target }) => {\n    const filterInput = target.value\n    setFilter(filterInput)\n  }\n\n  function getFilteredNames() {\n    const normilizedFilterState = filter.toLowerCase()\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normilizedFilterState),\n    )\n  }\n\n  const deleteContact = (contactId) => {\n    setContacts((prevState) =>\n      [...prevState].filter((contact) => contact.id !== contactId),\n    )\n  }\n\n  return (\n    <>\n      <h2>Phonebook</h2>\n\n      <ContactAddForm onSubmit={addContact} />\n\n      <h2>Contacts</h2>\n\n      <Filter filter={filter} handleFilterChange={handleFilterChange}></Filter>\n\n      <ContactList>\n        {getFilteredNames().map(({ id, name, number }) => (\n          <ContactListItem\n            key={id}\n            name={name}\n            number={number}\n            onDelBtnClick={() => deleteContact(id)}\n          />\n        ))}\n      </ContactList>\n    </>\n  )\n}\n\n// export default class App extends Component {\n//   state = {\n//     contacts: [\n// { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n// { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n// { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n// { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n//     ],\n//     filter: '',\n//   }\n\n// addContact = (name, number) => {\n//   const contactsHaveDuplicate = this.state.contacts.find(\n//     (contact) => contact.name === name,\n//   )\n//   contactsHaveDuplicate\n//     ? alert(`${name} is already in contacts`)\n//     : this.setState((prevState) => ({\n//         contacts: [\n//           ...prevState.contacts,\n//           { id: uuidv4(), name: name, number: number },\n//         ],\n//       }))\n// }\n\n// handleFilterChange = ({ target }) => {\n//   const filterInput = target.value\n//   this.setState({\n//     filter: filterInput,\n//   })\n// }\n\n// getFilteredNames = () => {\n//   const { filter, contacts } = this.state\n//   const normilizedFilterState = filter.toLowerCase()\n\n//   return contacts.filter((contact) =>\n//     contact.name.toLowerCase().includes(normilizedFilterState),\n//   )\n// }\n\n// deleteContact = (contactId) => {\n//   this.setState((prevState) => ({\n//     contacts: prevState.contacts.filter(\n//       (contact) => contact.id !== contactId,\n//     ),\n//   }))\n// }\n\n//   render() {\n//     const { filter } = this.state\n\n//     const filteredContactNames = this.getFilteredNames()\n\n//     return (\n//       <>\n// <h2>Phonebook</h2>\n\n// <ContactAddForm onSubmit={this.addContact} />\n\n// <h2>Contacts</h2>\n\n// <Filter\n//   filter={filter}\n//   handleFilterChange={this.handleFilterChange}\n// ></Filter>\n\n// <ContactList>\n//   {filteredContactNames.map(({ id, name, number }) => (\n//     <ContactListItem\n//       key={id}\n//       name={name}\n//       number={number}\n//       onDelBtnClick={() => this.deleteContact(id)}\n//     />\n//   ))}\n// </ContactList>\n//       </>\n//     )\n//   }\n// }\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './Components/App'\nimport 'modern-normalize/modern-normalize.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}